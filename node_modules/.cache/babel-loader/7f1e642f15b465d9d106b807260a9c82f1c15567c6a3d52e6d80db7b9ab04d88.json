{"ast":null,"code":"import { toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, normalizeStyle as _normalizeStyle, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, resolveComponent as _resolveComponent, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = [\"src\"];\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = [\"colspan\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_CategoryRow = _resolveComponent(\"CategoryRow\", true);\n  return _openBlock(), _createElementBlock(\"tbody\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"td\", {\n    style: _normalizeStyle({\n      paddingLeft: $props.category.depth * 20 + 'px'\n    })\n  }, [_createElementVNode(\"span\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.toggleChildren && $options.toggleChildren(...args)),\n    class: _normalizeClass($options.labelClasses)\n  }, [_createTextVNode(_toDisplayString($props.category.name) + \" \", 1 /* TEXT */), _createElementVNode(\"i\", {\n    class: _normalizeClass($options.iconClasses)\n  }, null, 2 /* CLASS */)], 2 /* CLASS */)], 4 /* STYLE */), _createElementVNode(\"td\", null, _toDisplayString($props.category.id), 1 /* TEXT */), _createElementVNode(\"td\", null, [$props.category.picture ? (_openBlock(), _createElementBlock(\"img\", {\n    key: 0,\n    src: $props.category.picture,\n    alt: \"Category Picture\",\n    style: {\n      \"max-width\": \"50px\",\n      \"max-height\": \"50px\"\n    }\n  }, null, 8 /* PROPS */, _hoisted_1)) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"td\", null, _toDisplayString($props.category.parent_id), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString($props.category.created_at), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString($props.category.updated_at), 1 /* TEXT */), _createElementVNode(\"td\", null, [_createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = $event => $props.deleteCategory($props.category.id))\n  }, \"Delete\"), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = $event => $props.openUpdatePopup($props.category))\n  }, \"Update\")])]), $data.showChildren && $props.category.children && $props.category.children.length > 0 ? (_openBlock(), _createElementBlock(\"tr\", _hoisted_2, [_createElementVNode(\"td\", {\n    colspan: $options.colSpan\n  }, [_createElementVNode(\"table\", null, [_createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.category.children, childCategory => {\n    return _openBlock(), _createBlock(_component_CategoryRow, {\n      key: childCategory.id,\n      category: childCategory,\n      deleteCategory: $props.deleteCategory,\n      openUpdatePopup: $props.openUpdatePopup\n    }, null, 8 /* PROPS */, [\"category\", \"deleteCategory\", \"openUpdatePopup\"]);\n  }), 128 /* KEYED_FRAGMENT */))])])], 8 /* PROPS */, _hoisted_3)])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["key","_createElementBlock","_createElementVNode","style","_normalizeStyle","paddingLeft","$props","category","depth","onClick","_cache","args","$options","toggleChildren","class","_normalizeClass","labelClasses","_createTextVNode","_toDisplayString","name","iconClasses","id","picture","src","alt","_hoisted_1","_createCommentVNode","parent_id","created_at","updated_at","$event","deleteCategory","openUpdatePopup","$data","showChildren","children","length","_hoisted_2","colspan","colSpan","_Fragment","_renderList","childCategory","_createBlock","_component_CategoryRow","_hoisted_3"],"sources":["/home/batuhan/Documents/vartur1/vartur0110/frontend/src/components/CategoryRow.vue"],"sourcesContent":["<template>\n    <tbody>\n      <tr>\n        <td :style=\"{ paddingLeft: category.depth * 20 + 'px' }\">\n          <span @click=\"toggleChildren\" :class=\"labelClasses\">\n            {{ category.name }}\n            <i :class=\"iconClasses\"></i>\n          </span>\n        </td>\n        <td>{{ category.id }}</td>\n        <td>\n          <img\n            v-if=\"category.picture\"\n            :src=\"category.picture\"\n            alt=\"Category Picture\"\n            style=\"max-width: 50px; max-height: 50px;\"\n          />\n        </td>\n        <td>{{ category.parent_id }}</td>\n        <td>{{ category.created_at }}</td>\n        <td>{{ category.updated_at }}</td>\n        <td>\n          <button @click=\"deleteCategory(category.id)\">Delete</button>\n          <button @click=\"openUpdatePopup(category)\">Update</button>\n        </td>\n      </tr>\n      <tr v-if=\"showChildren && category.children && category.children.length > 0\">\n        <td :colspan=\"colSpan\">\n          <table>\n            <tbody>\n              <CategoryRow\n                v-for=\"childCategory in category.children\"\n                :key=\"childCategory.id\"\n                :category=\"childCategory\"\n                :deleteCategory=\"deleteCategory\"\n                :openUpdatePopup=\"openUpdatePopup\"\n              />\n            </tbody>\n          </table>\n        </td>\n      </tr>\n    </tbody>\n  </template>\n  \n  <script>\n  export default {\n    props: {\n      category: Object,\n      deleteCategory: Function,\n      openUpdatePopup: Function,\n    },\n    data() {\n      return {\n        showChildren: false,\n      };\n    },\n    computed: {\n      iconClasses() {\n        return {\n          'fa-plus-square-o': !this.showChildren,\n          'fa-minus-square-o': this.showChildren,\n        };\n      },\n      labelClasses() {\n        return { 'has-children': this.showChildren && this.category.children };\n      },\n      colSpan() {\n        return 7; // Adjust the colspan based on your actual number of columns\n      },\n    },\n    methods: {\n      toggleChildren() {\n        this.showChildren = !this.showChildren;\n      },\n    },\n  };\n  </script>\n  "],"mappings":";mBAAA;;EAAAA,GAAA;AAAA;mBAAA;;;uBACIC,mBAAA,CAwCQ,gBAvCNC,mBAAA,CAuBK,aAtBHA,mBAAA,CAKK;IALAC,KAAK,EAHlBC,eAAA;MAAAC,WAAA,EAGmCC,MAAA,CAAAC,QAAQ,CAACC,KAAK;IAAA;MACvCN,mBAAA,CAGO;IAHAO,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,cAAA,IAAAD,QAAA,CAAAC,cAAA,IAAAF,IAAA,CAAc;IAAGG,KAAK,EAJ9CC,eAAA,CAIgDH,QAAA,CAAAI,YAAY;MAJ5DC,gBAAA,CAAAC,gBAAA,CAKeZ,MAAA,CAAAC,QAAQ,CAACY,IAAI,IAAG,GACnB,iBAAAjB,mBAAA,CAA4B;IAAxBY,KAAK,EANrBC,eAAA,CAMuBH,QAAA,CAAAQ,WAAW;6DAG1BlB,mBAAA,CAA0B,YAAAgB,gBAAA,CAAnBZ,MAAA,CAAAC,QAAQ,CAACc,EAAE,kBAClBnB,mBAAA,CAOK,aALKI,MAAA,CAAAC,QAAQ,CAACe,OAAO,I,cADxBrB,mBAAA,CAKE;IAhBZD,GAAA;IAaauB,GAAG,EAAEjB,MAAA,CAAAC,QAAQ,CAACe,OAAO;IACtBE,GAAG,EAAC,kBAAkB;IACtBrB,KAA0C,EAA1C;MAAA;MAAA;IAAA;0BAfZsB,UAAA,KAAAC,mBAAA,e,GAkBQxB,mBAAA,CAAiC,YAAAgB,gBAAA,CAA1BZ,MAAA,CAAAC,QAAQ,CAACoB,SAAS,kBACzBzB,mBAAA,CAAkC,YAAAgB,gBAAA,CAA3BZ,MAAA,CAAAC,QAAQ,CAACqB,UAAU,kBAC1B1B,mBAAA,CAAkC,YAAAgB,gBAAA,CAA3BZ,MAAA,CAAAC,QAAQ,CAACsB,UAAU,kBAC1B3B,mBAAA,CAGK,aAFHA,mBAAA,CAA4D;IAAnDO,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAoB,MAAA,IAAExB,MAAA,CAAAyB,cAAc,CAACzB,MAAA,CAAAC,QAAQ,CAACc,EAAE;KAAG,QAAM,GACnDnB,mBAAA,CAA0D;IAAjDO,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAoB,MAAA,IAAExB,MAAA,CAAA0B,eAAe,CAAC1B,MAAA,CAAAC,QAAQ;KAAG,QAAM,E,KAG3C0B,KAAA,CAAAC,YAAY,IAAI5B,MAAA,CAAAC,QAAQ,CAAC4B,QAAQ,IAAI7B,MAAA,CAAAC,QAAQ,CAAC4B,QAAQ,CAACC,MAAM,Q,cAAvEnC,mBAAA,CAcK,MAxCXoC,UAAA,GA2BQnC,mBAAA,CAYK;IAZAoC,OAAO,EAAE1B,QAAA,CAAA2B;EAAO,IACnBrC,mBAAA,CAUQ,gBATNA,mBAAA,CAQQ,iB,kBAPND,mBAAA,CAMEuC,SAAA,QApChBC,WAAA,CA+BwCnC,MAAA,CAAAC,QAAQ,CAAC4B,QAAQ,EAAlCO,aAAa;yBADtBC,YAAA,CAMEC,sBAAA;MAJC5C,GAAG,EAAE0C,aAAa,CAACrB,EAAE;MACrBd,QAAQ,EAAEmC,aAAa;MACvBX,cAAc,EAAEzB,MAAA,CAAAyB,cAAc;MAC9BC,eAAe,EAAE1B,MAAA,CAAA0B;;sDAnClCa,UAAA,E,KAAAnB,mBAAA,e"},"metadata":{},"sourceType":"module","externalDependencies":[]}