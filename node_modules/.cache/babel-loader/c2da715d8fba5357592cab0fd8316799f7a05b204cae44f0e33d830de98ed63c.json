{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-173b1ad3\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"productName\"\n}, \"Product Name:\", -1 /* HOISTED */));\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\"\n}, \"Submit\", -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createCommentVNode(\" Your form content goes here \"), _createElementVNode(\"form\", {\n    onSubmit: _cache[1] || (_cache[1] = _withModifiers((...args) => $options.handleSubmit && $options.handleSubmit(...args), [\"prevent\"]))\n  }, [_createCommentVNode(\" Form fields for product details \"), _hoisted_1, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"productName\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.productName = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.productName]]), _createCommentVNode(\" Add more form fields as needed for other product details \"), _createCommentVNode(\" Submit button \"), _hoisted_2], 32 /* NEED_HYDRATION */)]);\n}","map":{"version":3,"names":["_createElementVNode","for","type","_createElementBlock","_createCommentVNode","onSubmit","_cache","_withModifiers","args","$options","handleSubmit","_hoisted_1","id","$event","$data","productName","required","_hoisted_2"],"sources":["/home/batuhan/Documents/vartur1/vartur0110/frontend/src/components/ProductForm.vue"],"sourcesContent":["\n<!-- src/components/ProductForm.vue -->\n<template>\n    <div>\n      <!-- Your form content goes here -->\n      <form @submit.prevent=\"handleSubmit\">\n        <!-- Form fields for product details -->\n        <label for=\"productName\">Product Name:</label>\n        <input type=\"text\" id=\"productName\" v-model=\"productName\" required>\n  \n        <!-- Add more form fields as needed for other product details -->\n  \n        <!-- Submit button -->\n        <button type=\"submit\">Submit</button>\n      </form>\n    </div>\n  </template>\n  \n  <script>\n  export default {\n    data() {\n      return {\n        productName: '', // Add more data properties for other product details\n      };\n    },\n    methods: {\n      handleSubmit() {\n        // Collect form data and call a method to handle product creation\n        const productData = {\n          name: this.productName,\n          // Add more properties for other product details\n        };\n  \n        // Call a method to handle product creation (e.g., createProduct)\n        this.$emit('createProduct', productData);\n  \n        // Optionally, reset form fields after submission\n        this.productName = '';\n      },\n    },\n  };\n  </script>\n  \n  <style scoped>\n  /* Your component-specific styles go here */\n  </style>\n  "],"mappings":";;gEAOQA,mBAAA,CAA8C;EAAvCC,GAAG,EAAC;AAAa,GAAC,eAAa;gEAMtCD,mBAAA,CAAqC;EAA7BE,IAAI,EAAC;AAAQ,GAAC,QAAM;;uBAVhCC,mBAAA,CAYM,cAXJC,mBAAA,iCAAoC,EACpCJ,mBAAA,CASO;IATAK,QAAM,EAAAC,MAAA,QAAAA,MAAA,MALnBC,cAAA,KAAAC,IAAA,KAK6BC,QAAA,CAAAC,YAAA,IAAAD,QAAA,CAAAC,YAAA,IAAAF,IAAA,CAAY;MACjCJ,mBAAA,qCAAwC,EACxCO,UAA8C,E,gBAC9CX,mBAAA,CAAmE;IAA5DE,IAAI,EAAC,MAAM;IAACU,EAAE,EAAC,aAAa;IAR3C,uBAAAN,MAAA,QAAAA,MAAA,MAAAO,MAAA,IAQqDC,KAAA,CAAAC,WAAW,GAAAF,MAAA;IAAEG,QAAQ,EAAR;iDAAbF,KAAA,CAAAC,WAAW,E,GAExDX,mBAAA,8DAAiE,EAEjEA,mBAAA,mBAAsB,EACtBa,UAAqC,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}