{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  id: \"app\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_CategoryForm = _resolveComponent(\"CategoryForm\");\n  const _component_CategoryTable = _resolveComponent(\"CategoryTable\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_CategoryForm, {\n    onSubmit: $options.createCategory\n  }, null, 8 /* PROPS */, [\"onSubmit\"]), _createVNode(_component_CategoryTable, {\n    categories: $data.categories,\n    onEdit: $options.updateCategory,\n    onDelete: $options.deleteCategory\n  }, null, 8 /* PROPS */, [\"categories\", \"onEdit\", \"onDelete\"])]);\n}","map":{"version":3,"names":["id","_createElementBlock","_hoisted_1","_createVNode","_component_CategoryForm","onSubmit","$options","createCategory","_component_CategoryTable","categories","$data","onEdit","updateCategory","onDelete","deleteCategory"],"sources":["/home/batuhan/Documents/vartur1/vartur0110/frontend/src/App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <CategoryForm @submit=\"createCategory\" />\n    <CategoryTable :categories=\"categories\" @edit=\"updateCategory\" @delete=\"deleteCategory\" />\n  </div>\n</template>\n\n<script>\nimport CategoryService from '@/services/CategoryService.js';\n\nexport default {\n  data() {\n    return {\n      categories: [],\n    };\n  },\n\n  mounted() {\n    this.fetchCategories();\n  },\n\n  methods: {\n    async fetchCategories() {\n      this.categories = await CategoryService.getCategories();\n    },\n\n    async createCategory(categoryData) {\n      await CategoryService.createCategory(categoryData);\n      this.fetchCategories();\n    },\n\n    async updateCategory(categoryId, updatedData) {\n      await CategoryService.updateCategory(categoryId, updatedData);\n      this.fetchCategories();\n    },\n\n    async deleteCategory(categoryId) {\n      await CategoryService.deleteCategory(categoryId);\n      this.fetchCategories();\n    },\n  },\n};\n</script>\n"],"mappings":";;EACOA,EAAE,EAAC;AAAK;;;;uBAAbC,mBAAA,CAGM,OAHNC,UAGM,GAFJC,YAAA,CAAyCC,uBAAA;IAA1BC,QAAM,EAAEC,QAAA,CAAAC;EAAc,uCACrCJ,YAAA,CAA0FK,wBAAA;IAA1EC,UAAU,EAAEC,KAAA,CAAAD,UAAU;IAAGE,MAAI,EAAEL,QAAA,CAAAM,cAAc;IAAGC,QAAM,EAAEP,QAAA,CAAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}