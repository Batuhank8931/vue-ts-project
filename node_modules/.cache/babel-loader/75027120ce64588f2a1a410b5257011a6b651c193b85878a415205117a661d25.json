{"ast":null,"code":"export default {\n  props: {\n    categories: Array,\n    deleteCategory: Function,\n    updateCategory: Function\n  },\n  data() {\n    return {\n      showUpdateModal: false,\n      updateCategoryData: {\n        id: null,\n        name: '',\n        picture: '',\n        parent_id: null\n      }\n    };\n  },\n  methods: {\n    // ... existing methods ...\n\n    openUpdateModal(category) {\n      this.showUpdateModal = true;\n      // Set the data for the selected category\n      this.updateCategoryData = {\n        id: category.id,\n        name: category.name,\n        picture: category.picture || '',\n        parent_id: category.parent_id || null\n      };\n    },\n    updateCategoryConfirm() {\n      // Call the updateCategory function with the updated data\n      this.updateCategory(this.updateCategoryData);\n      // Hide the modal\n      this.showUpdateModal = false;\n    },\n    cancelUpdate() {\n      // Reset the updateCategoryData and hide the modal\n      this.updateCategoryData = {\n        id: null,\n        name: '',\n        picture: '',\n        parent_id: null\n      };\n      this.showUpdateModal = false;\n    }\n  }\n};","map":{"version":3,"names":["props","categories","Array","deleteCategory","Function","updateCategory","data","showUpdateModal","updateCategoryData","id","name","picture","parent_id","methods","openUpdateModal","category","updateCategoryConfirm","cancelUpdate"],"sources":["/home/batuhan/Documents/vartur1/vartur0110/frontend/src/components/CategoryTable.vue"],"sourcesContent":["<template>\n  <div>\n    <!-- Add modal for updating category -->\n    <div v-if=\"showUpdateModal\">\n      <div class=\"modal\">\n        <h2>Update Category</h2>\n        <label for=\"updateName\">Name:</label>\n        <input v-model=\"updateCategoryData.name\" type=\"text\" id=\"updateName\" />\n        <label for=\"updatePicture\">Picture URL:</label>\n        <input v-model=\"updateCategoryData.picture\" type=\"text\" id=\"updatePicture\" />\n        <label for=\"updateParentId\">Parent ID:</label>\n        <input v-model=\"updateCategoryData.parent_id\" type=\"text\" id=\"updateParentId\" />\n        <button @click=\"updateCategoryConfirm\">Update</button>\n        <button @click=\"cancelUpdate\">Cancel</button>\n      </div>\n    </div>\n\n    <table>\n      <!-- ... existing table headers ... -->\n      <tbody>\n        <tr v-for=\"category in categories\" :key=\"category.id\">\n          <!-- ... existing table columns ... -->\n          <td>\n            <button @click=\"deleteCategory(category.id)\">Delete</button>\n            <button @click=\"openUpdateModal(category)\">Update</button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: {\n    categories: Array,\n    deleteCategory: Function,\n    updateCategory: Function,\n  },\n  data() {\n    return {\n      showUpdateModal: false,\n      updateCategoryData: {\n        id: null,\n        name: '',\n        picture: '',\n        parent_id: null,\n      },\n    };\n  },\n  methods: {\n    // ... existing methods ...\n\n    openUpdateModal(category) {\n      this.showUpdateModal = true;\n      // Set the data for the selected category\n      this.updateCategoryData = {\n        id: category.id,\n        name: category.name,\n        picture: category.picture || '',\n        parent_id: category.parent_id || null,\n      };\n    },\n\n    updateCategoryConfirm() {\n      // Call the updateCategory function with the updated data\n      this.updateCategory(this.updateCategoryData);\n      // Hide the modal\n      this.showUpdateModal = false;\n    },\n\n    cancelUpdate() {\n      // Reset the updateCategoryData and hide the modal\n      this.updateCategoryData = {\n        id: null,\n        name: '',\n        picture: '',\n        parent_id: null,\n      };\n      this.showUpdateModal = false;\n    },\n  },\n};\n</script>\n\n<style scoped>\n/* Your component-specific styles go here */\n/* Add styles for the modal */\n.modal {\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-color: white;\n  padding: 20px;\n  border: 1px solid #ddd;\n  z-index: 1000;\n  display: flex;\n  flex-direction: column;\n}\n\n.modal label {\n  margin-bottom: 5px;\n}\n\n.modal input {\n  margin-bottom: 15px;\n}\n\n.modal button {\n  cursor: pointer;\n  padding: 5px 10px;\n  margin-right: 10px;\n}\n\n.modal button:last-child {\n  margin-right: 0;\n}\n</style>\n"],"mappings":"AAiCA,eAAe;EACbA,KAAK,EAAE;IACLC,UAAU,EAAEC,KAAK;IACjBC,cAAc,EAAEC,QAAQ;IACxBC,cAAc,EAAED;EAClB,CAAC;EACDE,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,eAAe,EAAE,KAAK;MACtBC,kBAAkB,EAAE;QAClBC,EAAE,EAAE,IAAI;QACRC,IAAI,EAAE,EAAE;QACRC,OAAO,EAAE,EAAE;QACXC,SAAS,EAAE;MACb;IACF,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP;;IAEAC,eAAeA,CAACC,QAAQ,EAAE;MACxB,IAAI,CAACR,eAAc,GAAI,IAAI;MAC3B;MACA,IAAI,CAACC,kBAAiB,GAAI;QACxBC,EAAE,EAAEM,QAAQ,CAACN,EAAE;QACfC,IAAI,EAAEK,QAAQ,CAACL,IAAI;QACnBC,OAAO,EAAEI,QAAQ,CAACJ,OAAM,IAAK,EAAE;QAC/BC,SAAS,EAAEG,QAAQ,CAACH,SAAQ,IAAK;MACnC,CAAC;IACH,CAAC;IAEDI,qBAAqBA,CAAA,EAAG;MACtB;MACA,IAAI,CAACX,cAAc,CAAC,IAAI,CAACG,kBAAkB,CAAC;MAC5C;MACA,IAAI,CAACD,eAAc,GAAI,KAAK;IAC9B,CAAC;IAEDU,YAAYA,CAAA,EAAG;MACb;MACA,IAAI,CAACT,kBAAiB,GAAI;QACxBC,EAAE,EAAE,IAAI;QACRC,IAAI,EAAE,EAAE;QACRC,OAAO,EAAE,EAAE;QACXC,SAAS,EAAE;MACb,CAAC;MACD,IAAI,CAACL,eAAc,GAAI,KAAK;IAC9B;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}