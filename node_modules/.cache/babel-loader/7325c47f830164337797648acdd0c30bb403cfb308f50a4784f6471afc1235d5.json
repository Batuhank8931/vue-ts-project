{"ast":null,"code":"export default {\n  props: {\n    categories: Array,\n    deleteCategory: Function,\n    updateCategory: Function\n  },\n  data() {\n    return {\n      isUpdatePopupOpen: false,\n      updateName: '',\n      updatePicture: '',\n      updateParentId: '',\n      updatingCategoryId: null\n    };\n  },\n  methods: {\n    // ... (existing methods)\n\n    openUpdatePopup(category) {\n      this.isUpdatePopupOpen = true;\n      this.updateName = category.name;\n      this.updatePicture = category.picture || '';\n      this.updateParentId = category.parent_id || '';\n      this.updatingCategoryId = category.id;\n    },\n    closeUpdatePopup() {\n      this.isUpdatePopupOpen = false;\n      this.updateName = '';\n      this.updatePicture = '';\n      this.updateParentId = '';\n      this.updatingCategoryId = null;\n    },\n    async updateCategoryInPopup() {\n      try {\n        const updatedCategory = {\n          id: this.updatingCategoryId,\n          name: this.updateName,\n          picture: this.updatePicture,\n          parent_id: this.updateParentId || null\n        };\n        await this.updateCategory(updatedCategory);\n        this.closeUpdatePopup();\n      } catch (error) {\n        console.error('Error updating category:', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["props","categories","Array","deleteCategory","Function","updateCategory","data","isUpdatePopupOpen","updateName","updatePicture","updateParentId","updatingCategoryId","methods","openUpdatePopup","category","name","picture","parent_id","id","closeUpdatePopup","updateCategoryInPopup","updatedCategory","error","console"],"sources":["/home/batuhan/Documents/vartur1/vartur0110/frontend/src/components/CategoryTable.vue"],"sourcesContent":["<!-- frontend/src/components/CategoryTable.vue -->\n<template>\n  <div>\n    <!-- ... (existing code) -->\n    <table>\n      <!-- ... (existing code) -->\n      <tbody>\n        <tr v-for=\"category in categories\" :key=\"category.id\">\n          <!-- ... (existing code) -->\n          <td>\n            <button @click=\"deleteCategory(category.id)\">Delete</button>\n            <button @click=\"openUpdatePopup(category)\">Update</button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n\n    <!-- Popup for updating category -->\n    <div v-if=\"isUpdatePopupOpen\" class=\"popup\">\n      <h2>Update Category</h2>\n      <label for=\"updateName\">Name:</label>\n      <input v-model=\"updateName\" type=\"text\" id=\"updateName\" />\n      <label for=\"updatePicture\">Picture:</label>\n      <input v-model=\"updatePicture\" type=\"text\" id=\"updatePicture\" />\n      <label for=\"updateParentId\">Parent ID:</label>\n      <input v-model=\"updateParentId\" type=\"text\" id=\"updateParentId\" />\n      <button @click=\"updateCategoryInPopup\">Update</button>\n      <button @click=\"closeUpdatePopup\">Cancel</button>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: {\n    categories: Array,\n    deleteCategory: Function,\n    updateCategory: Function\n  },\n  data() {\n    return {\n      isUpdatePopupOpen: false,\n      updateName: '',\n      updatePicture: '',\n      updateParentId: '',\n      updatingCategoryId: null\n    };\n  },\n  methods: {\n    // ... (existing methods)\n\n    openUpdatePopup(category) {\n      this.isUpdatePopupOpen = true;\n      this.updateName = category.name;\n      this.updatePicture = category.picture || '';\n      this.updateParentId = category.parent_id || '';\n      this.updatingCategoryId = category.id;\n    },\n\n    closeUpdatePopup() {\n      this.isUpdatePopupOpen = false;\n      this.updateName = '';\n      this.updatePicture = '';\n      this.updateParentId = '';\n      this.updatingCategoryId = null;\n    },\n\n    async updateCategoryInPopup() {\n      try {\n        const updatedCategory = {\n          id: this.updatingCategoryId,\n          name: this.updateName,\n          picture: this.updatePicture,\n          parent_id: this.updateParentId || null\n        };\n\n        await this.updateCategory(updatedCategory);\n        this.closeUpdatePopup();\n      } catch (error) {\n        console.error('Error updating category:', error);\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n/* Your component-specific styles go here */\n.popup {\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  padding: 20px;\n  background-color: #fff;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n  z-index: 1000;\n}\n</style>\n"],"mappings":"AAiCA,eAAe;EACbA,KAAK,EAAE;IACLC,UAAU,EAAEC,KAAK;IACjBC,cAAc,EAAEC,QAAQ;IACxBC,cAAc,EAAED;EAClB,CAAC;EACDE,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,iBAAiB,EAAE,KAAK;MACxBC,UAAU,EAAE,EAAE;MACdC,aAAa,EAAE,EAAE;MACjBC,cAAc,EAAE,EAAE;MAClBC,kBAAkB,EAAE;IACtB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP;;IAEAC,eAAeA,CAACC,QAAQ,EAAE;MACxB,IAAI,CAACP,iBAAgB,GAAI,IAAI;MAC7B,IAAI,CAACC,UAAS,GAAIM,QAAQ,CAACC,IAAI;MAC/B,IAAI,CAACN,aAAY,GAAIK,QAAQ,CAACE,OAAM,IAAK,EAAE;MAC3C,IAAI,CAACN,cAAa,GAAII,QAAQ,CAACG,SAAQ,IAAK,EAAE;MAC9C,IAAI,CAACN,kBAAiB,GAAIG,QAAQ,CAACI,EAAE;IACvC,CAAC;IAEDC,gBAAgBA,CAAA,EAAG;MACjB,IAAI,CAACZ,iBAAgB,GAAI,KAAK;MAC9B,IAAI,CAACC,UAAS,GAAI,EAAE;MACpB,IAAI,CAACC,aAAY,GAAI,EAAE;MACvB,IAAI,CAACC,cAAa,GAAI,EAAE;MACxB,IAAI,CAACC,kBAAiB,GAAI,IAAI;IAChC,CAAC;IAED,MAAMS,qBAAqBA,CAAA,EAAG;MAC5B,IAAI;QACF,MAAMC,eAAc,GAAI;UACtBH,EAAE,EAAE,IAAI,CAACP,kBAAkB;UAC3BI,IAAI,EAAE,IAAI,CAACP,UAAU;UACrBQ,OAAO,EAAE,IAAI,CAACP,aAAa;UAC3BQ,SAAS,EAAE,IAAI,CAACP,cAAa,IAAK;QACpC,CAAC;QAED,MAAM,IAAI,CAACL,cAAc,CAACgB,eAAe,CAAC;QAC1C,IAAI,CAACF,gBAAgB,CAAC,CAAC;MACzB,EAAE,OAAOG,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD;IACF;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}