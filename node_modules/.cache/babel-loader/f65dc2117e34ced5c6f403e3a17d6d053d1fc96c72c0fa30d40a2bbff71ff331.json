{"ast":null,"code":"import CategoryRow from './CategoryRow.vue';\nexport default {\n  props: {\n    categories: Array,\n    deleteCategory: Function,\n    updateCategory: Function\n  },\n  data() {\n    return {\n      isUpdatePopupOpen: false,\n      isAddPopupOpen: false,\n      categoryData: {\n        id: null,\n        name: '',\n        picture: '',\n        parent_id: null\n      }\n    };\n  },\n  methods: {\n    openAddPopup() {\n      this.isAddPopupOpen = true;\n      this.categoryData = {\n        id: null,\n        name: '',\n        picture: '',\n        parent_id: null\n      };\n    },\n    openUpdatePopup(category) {\n      this.isUpdatePopupOpen = true;\n      this.categoryData = {\n        id: category.id,\n        name: category.name,\n        picture: category.picture || '',\n        parent_id: category.parent_id || null\n      };\n    },\n    closePopup() {\n      this.isUpdatePopupOpen = false;\n      this.isAddPopupOpen = false;\n      this.categoryData = {\n        id: null,\n        name: '',\n        picture: '',\n        parent_id: null\n      };\n    },\n    async addCategoryInPopup() {\n      try {\n        await this.addCategory(this.categoryData);\n        this.closePopup();\n      } catch (error) {\n        console.error('Error adding category:', error);\n      }\n    },\n    async updateCategoryInPopup() {\n      try {\n        await this.updateCategory(this.categoryData);\n        this.closePopup();\n      } catch (error) {\n        console.error('Error updating category:', error);\n      }\n    },\n    getTotalProductCount(category) {\n      // Implement a method to calculate the total product count\n      // for the category and its children\n      let count = category.products.length;\n      if (category.children && category.children.length > 0) {\n        for (const child of category.children) {\n          count += this.getTotalProductCount(child);\n        }\n      }\n      return count;\n    }\n  },\n  components: {\n    CategoryRow\n  }\n};","map":{"version":3,"names":["CategoryRow","props","categories","Array","deleteCategory","Function","updateCategory","data","isUpdatePopupOpen","isAddPopupOpen","categoryData","id","name","picture","parent_id","methods","openAddPopup","openUpdatePopup","category","closePopup","addCategoryInPopup","addCategory","error","console","updateCategoryInPopup","getTotalProductCount","count","products","length","children","child","components"],"sources":["/home/batuhan/Documents/vartur1/vartur0110/frontend/src/components/CategoryTable.vue"],"sourcesContent":["<!-- CategoryTable.vue -->\n<template>\n  <div>\n    <table>\n      <thead>\n        <tr>\n          <th>ID</th>\n          <th>Name</th>\n          <th>Picture</th>\n          <th>Parent ID</th>\n          <th>Product Count</th>\n          <th>Created At</th>\n          <th>Updated At</th>\n          <th>Actions</th>\n        </tr>\n      </thead>\n      <tbody>\n        <CategoryRow\n          v-for=\"category in categories\"\n          :key=\"category.id\"\n          :category=\"category\"\n          :totalProductCount=\"getTotalProductCount(category)\"\n          :deleteCategory=\"deleteCategory\"\n          :openUpdatePopup=\"openUpdatePopup\"\n        />\n      </tbody>\n    </table>\n\n    <button @click=\"openAddPopup\">Add New</button>\n\n    <!-- Popup for updating category -->\n    <div v-if=\"isUpdatePopupOpen\" class=\"popup\">\n      <!-- ... (existing code) -->\n    </div>\n\n    <!-- Popup for adding new category -->\n    <div v-if=\"isAddPopupOpen\" class=\"popup\">\n      <!-- ... (existing code) -->\n    </div>\n  </div>\n</template>\n\n<script>\nimport CategoryRow from './CategoryRow.vue';\n\nexport default {\n  props: {\n    categories: Array,\n    deleteCategory: Function,\n    updateCategory: Function,\n  },\n  data() {\n    return {\n      isUpdatePopupOpen: false,\n      isAddPopupOpen: false,\n      categoryData: {\n        id: null,\n        name: '',\n        picture: '',\n        parent_id: null,\n      },\n    };\n  },\n  methods: {\n    openAddPopup() {\n      this.isAddPopupOpen = true;\n      this.categoryData = {\n        id: null,\n        name: '',\n        picture: '',\n        parent_id: null,\n      };\n    },\n\n    openUpdatePopup(category) {\n      this.isUpdatePopupOpen = true;\n      this.categoryData = {\n        id: category.id,\n        name: category.name,\n        picture: category.picture || '',\n        parent_id: category.parent_id || null,\n      };\n    },\n\n    closePopup() {\n      this.isUpdatePopupOpen = false;\n      this.isAddPopupOpen = false;\n      this.categoryData = {\n        id: null,\n        name: '',\n        picture: '',\n        parent_id: null,\n      };\n    },\n\n    async addCategoryInPopup() {\n      try {\n        await this.addCategory(this.categoryData);\n        this.closePopup();\n      } catch (error) {\n        console.error('Error adding category:', error);\n      }\n    },\n\n    async updateCategoryInPopup() {\n      try {\n        await this.updateCategory(this.categoryData);\n        this.closePopup();\n      } catch (error) {\n        console.error('Error updating category:', error);\n      }\n    },\n\n    getTotalProductCount(category) {\n      // Implement a method to calculate the total product count\n      // for the category and its children\n      let count = category.products.length;\n\n      if (category.children && category.children.length > 0) {\n        for (const child of category.children) {\n          count += this.getTotalProductCount(child);\n        }\n      }\n\n      return count;\n    },\n  },\n  components: {\n    CategoryRow,\n  },\n};\n</script>\n\n<style scoped>\n/* Your component-specific styles go here */\n.popup {\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  padding: 20px;\n  background-color: #fff;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n  z-index: 1000;\n}\n</style>\n"],"mappings":"AA2CA,OAAOA,WAAU,MAAO,mBAAmB;AAE3C,eAAe;EACbC,KAAK,EAAE;IACLC,UAAU,EAAEC,KAAK;IACjBC,cAAc,EAAEC,QAAQ;IACxBC,cAAc,EAAED;EAClB,CAAC;EACDE,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,iBAAiB,EAAE,KAAK;MACxBC,cAAc,EAAE,KAAK;MACrBC,YAAY,EAAE;QACZC,EAAE,EAAE,IAAI;QACRC,IAAI,EAAE,EAAE;QACRC,OAAO,EAAE,EAAE;QACXC,SAAS,EAAE;MACb;IACF,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,YAAYA,CAAA,EAAG;MACb,IAAI,CAACP,cAAa,GAAI,IAAI;MAC1B,IAAI,CAACC,YAAW,GAAI;QAClBC,EAAE,EAAE,IAAI;QACRC,IAAI,EAAE,EAAE;QACRC,OAAO,EAAE,EAAE;QACXC,SAAS,EAAE;MACb,CAAC;IACH,CAAC;IAEDG,eAAeA,CAACC,QAAQ,EAAE;MACxB,IAAI,CAACV,iBAAgB,GAAI,IAAI;MAC7B,IAAI,CAACE,YAAW,GAAI;QAClBC,EAAE,EAAEO,QAAQ,CAACP,EAAE;QACfC,IAAI,EAAEM,QAAQ,CAACN,IAAI;QACnBC,OAAO,EAAEK,QAAQ,CAACL,OAAM,IAAK,EAAE;QAC/BC,SAAS,EAAEI,QAAQ,CAACJ,SAAQ,IAAK;MACnC,CAAC;IACH,CAAC;IAEDK,UAAUA,CAAA,EAAG;MACX,IAAI,CAACX,iBAAgB,GAAI,KAAK;MAC9B,IAAI,CAACC,cAAa,GAAI,KAAK;MAC3B,IAAI,CAACC,YAAW,GAAI;QAClBC,EAAE,EAAE,IAAI;QACRC,IAAI,EAAE,EAAE;QACRC,OAAO,EAAE,EAAE;QACXC,SAAS,EAAE;MACb,CAAC;IACH,CAAC;IAED,MAAMM,kBAAkBA,CAAA,EAAG;MACzB,IAAI;QACF,MAAM,IAAI,CAACC,WAAW,CAAC,IAAI,CAACX,YAAY,CAAC;QACzC,IAAI,CAACS,UAAU,CAAC,CAAC;MACnB,EAAE,OAAOG,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD;IACF,CAAC;IAED,MAAME,qBAAqBA,CAAA,EAAG;MAC5B,IAAI;QACF,MAAM,IAAI,CAAClB,cAAc,CAAC,IAAI,CAACI,YAAY,CAAC;QAC5C,IAAI,CAACS,UAAU,CAAC,CAAC;MACnB,EAAE,OAAOG,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD;IACF,CAAC;IAEDG,oBAAoBA,CAACP,QAAQ,EAAE;MAC7B;MACA;MACA,IAAIQ,KAAI,GAAIR,QAAQ,CAACS,QAAQ,CAACC,MAAM;MAEpC,IAAIV,QAAQ,CAACW,QAAO,IAAKX,QAAQ,CAACW,QAAQ,CAACD,MAAK,GAAI,CAAC,EAAE;QACrD,KAAK,MAAME,KAAI,IAAKZ,QAAQ,CAACW,QAAQ,EAAE;UACrCH,KAAI,IAAK,IAAI,CAACD,oBAAoB,CAACK,KAAK,CAAC;QAC3C;MACF;MAEA,OAAOJ,KAAK;IACd;EACF,CAAC;EACDK,UAAU,EAAE;IACV/B;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}