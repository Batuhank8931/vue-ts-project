{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  id: \"app\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_CategoryTable = _resolveComponent(\"CategoryTable\");\n  const _component_CategoryForm = _resolveComponent(\"CategoryForm\");\n  const _component_ProductTable = _resolveComponent(\"ProductTable\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_CategoryTable, {\n    categories: $data.categories,\n    deleteCategory: $options.deleteCategory,\n    updateCategory: $options.updateCategory,\n    addCategory: $options.addCategory\n  }, null, 8 /* PROPS */, [\"categories\", \"deleteCategory\", \"updateCategory\", \"addCategory\"]), _createVNode(_component_CategoryForm, {\n    onCreateCategory: $options.createCategory\n  }, null, 8 /* PROPS */, [\"onCreateCategory\"]), _createVNode(_component_ProductTable, {\n    products: $data.products\n  }, null, 8 /* PROPS */, [\"products\"])]);\n}","map":{"version":3,"names":["id","_createElementBlock","_hoisted_1","_createVNode","_component_CategoryTable","categories","$data","deleteCategory","$options","updateCategory","addCategory","_component_CategoryForm","onCreateCategory","createCategory","_component_ProductTable","products"],"sources":["/home/batuhan/Documents/vartur1/vartur0110/frontend/src/App.vue"],"sourcesContent":["<!-- frontend/src/App.vue -->\n<template>\n  <div id=\"app\">\n    <CategoryTable\n      :categories=\"categories\"\n      :deleteCategory=\"deleteCategory\"\n      :updateCategory=\"updateCategory\"\n      :addCategory=\"addCategory\"\n    />\n    <CategoryForm @createCategory=\"createCategory\" />\n    <ProductTable :products=\"products\" />\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport CategoryTable from './components/CategoryTable.vue';\nimport CategoryForm from './components/CategoryForm.vue';\nimport ProductTable from './components/ProductTable.vue'; // Import your ProductTable component\n\nexport default {\n  name: 'App',\n  components: {\n    CategoryTable,\n    CategoryForm,\n    ProductTable, // Register the ProductTable component\n  },\n  data() {\n    return {\n      categories: [],\n      products: [], // Initialize the products array\n      \n    };\n  },\n  mounted() {\n    this.fetchCategories();\n    this.fetchProducts(); // Fetch products when the component is mounted\n  },\n  methods: {\n    async fetchCategories() {\n      try {\n        const response = await axios.get('http://localhost:3000/categories');\n        this.categories = response.data.categories;\n        console.log('Fetched categories:', this.categories);\n      } catch (error) {\n        console.error('Error fetching categories:', error);\n      }\n    },\n\n\n    async fetchProducts() {\n      try {\n        const response = await axios.get('http://localhost:3000/categories');\n        this.categories = response.data.categories;\n        console.log('Fetched categories:', this.categories);\n      } catch (error) {\n        console.error('Error fetching categories:', error);\n      }\n    },\n\n    async deleteCategory(id) {\n      try {\n        await axios.delete(`http://localhost:3000/categories/${id}`);\n        this.fetchCategories();\n      } catch (error) {\n        console.error('Error deleting category:', error);\n      }\n    },\n\n    async createCategory(category) {\n      try {\n        await axios.post('http://localhost:3000/categories', category);\n        this.fetchCategories();\n      } catch (error) {\n        console.error('Error creating category:', error);\n      }\n    },\n\n    async updateCategory(category) {\n      try {\n        // Call your backend API to update the category\n        await axios.put(`http://localhost:3000/categories/${category.id}`, category);\n        // Optionally, you can refresh the categories\n        this.fetchCategories();\n      } catch (error) {\n        console.error('Error updating category:', error);\n      }\n    },\n\n    // New method for adding category\n    async addCategory(category) {\n      try {\n        await axios.post('http://localhost:3000/categories', category);\n        this.fetchCategories();\n      } catch (error) {\n        console.error('Error adding category:', error);\n      }\n    },\n  },\n};\n</script>\n\n<style>\n#app {\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n\ntable {\n  width: 100%;\n  border-collapse: collapse;\n  margin-top: 20px;\n}\n\nth, td {\n  border: 1px solid #dddddd;\n  text-align: left;\n  padding: 8px;\n}\n\nth {\n  background-color: #f2f2f2;\n}\n</style>\n"],"mappings":";;EAEOA,EAAE,EAAC;AAAK;;;;;uBAAbC,mBAAA,CASM,OATNC,UASM,GARJC,YAAA,CAKEC,wBAAA;IAJCC,UAAU,EAAEC,KAAA,CAAAD,UAAU;IACtBE,cAAc,EAAEC,QAAA,CAAAD,cAAc;IAC9BE,cAAc,EAAED,QAAA,CAAAC,cAAc;IAC9BC,WAAW,EAAEF,QAAA,CAAAE;8FAEhBP,YAAA,CAAiDQ,uBAAA;IAAlCC,gBAAc,EAAEJ,QAAA,CAAAK;EAAc,+CAC7CV,YAAA,CAAqCW,uBAAA;IAAtBC,QAAQ,EAAET,KAAA,CAAAS;EAAQ,sC"},"metadata":{},"sourceType":"module","externalDependencies":[]}